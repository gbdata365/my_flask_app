# Flask 대시보드 애플리케이션 서버 설정

upstream flask_app {
    server flask_app:8000 max_fails=3 fail_timeout=30s;
}

# HTTP 서버 (HTTPS로 리다이렉트)
server {
    listen 80;
    server_name _;

    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # HTTP to HTTPS 리다이렉트 (SSL 인증서가 있는 경우)
    # return 301 https://$server_name$request_uri;

    # 개발/테스트용 - HTTP로 직접 서비스
    location / {
        proxy_pass http://flask_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        proxy_busy_buffers_size 16k;
    }

    # 정적 파일 서빙
    location /static/ {
        alias /var/www/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";

        # 보안 헤더
        add_header X-Content-Type-Options nosniff;

        # 파일이 없으면 Flask 앱으로 전달
        try_files $uri @flask;
    }

    # 업로드된 파일 서빙
    location /uploads/ {
        alias /var/www/uploads/;
        expires 7d;
        add_header Cache-Control "public";

        # 보안 헤더
        add_header X-Content-Type-Options nosniff;

        # 실행 파일 차단
        location ~* \.(php|asp|aspx|jsp|cgi|pl|py)$ {
            deny all;
        }
    }

    # Flask 앱으로 전달하는 내부 location
    location @flask {
        proxy_pass http://flask_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 로봇 차단 (선택사항)
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /uploads/\nDisallow: /admin/\n";
        add_header Content-Type text/plain;
    }

    # 파비콘 처리
    location /favicon.ico {
        alias /var/www/static/favicon.ico;
        expires 30d;
        log_not_found off;
        access_log off;
    }
}

# HTTPS 서버 (SSL 인증서가 있는 경우 활성화)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     # SSL 인증서 설정
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#
#     # SSL 보안 설정
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS 보안 헤더
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # 나머지 설정은 HTTP 서버와 동일
#     location / {
#         proxy_pass http://flask_app;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#     }
# }